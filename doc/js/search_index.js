var search_data = {"index":{"searchIndex":["die","dragon","dungeon","enumerable","object","orangetree","person","player","room","string","student","action()","action2()","add_room()","bubble_sort()","bubble_sort_by()","caeser_cipher()","cheat()","favorite_number()","feed()","find_room_in_direction()","find_room_in_dungeon()","full_description()","go()","greeting()","height()","introduction()","multiply_els()","my_all?()","my_any?()","my_count()","my_each()","my_each_with_index()","my_inject()","my_map()","my_none?()","my_select()","new()","new()","new()","new()","new()","new()","new()","number_of_instances()","oneyearpasses()","people_names()","pick()","puttobed()","range()","rock()","roll()","show_current_description()","showing()","start()","stock_picker()","substrings()","time_from_seconds()","toss()","validitytest()","vowels()","walk()"],"longSearchIndex":["die","dragon","dungeon","enumerable","object","orangetree","person","player","room","string","student","object#action()","object#action2()","dungeon#add_room()","object#bubble_sort()","object#bubble_sort_by()","object#caeser_cipher()","die#cheat()","student#favorite_number()","dragon#feed()","dungeon#find_room_in_direction()","dungeon#find_room_in_dungeon()","room#full_description()","dungeon#go()","person#greeting()","orangetree#height()","student#introduction()","enumerable#multiply_els()","enumerable#my_all?()","enumerable#my_any?()","enumerable#my_count()","enumerable#my_each()","enumerable#my_each_with_index()","enumerable#my_inject()","enumerable#my_map()","enumerable#my_none?()","enumerable#my_select()","die::new()","dragon::new()","dungeon::new()","orangetree::new()","person::new()","player::new()","room::new()","person::number_of_instances()","orangetree#oneyearpasses()","person::people_names()","orangetree#pick()","dragon#puttobed()","object#range()","dragon#rock()","die#roll()","dungeon#show_current_description()","die#showing()","dungeon#start()","object#stock_picker()","object#substrings()","object#time_from_seconds()","dragon#toss()","object#validitytest()","string#vowels()","dragon#walk()"],"info":[["Die","","Die.html","",""],["Dragon","","Dragon.html","",""],["Dungeon","","Dungeon.html","",""],["Enumerable","","Enumerable.html","",""],["Object","","Object.html","",""],["OrangeTree","","OrangeTree.html","",""],["Person","","Person.html","",""],["Player","","Player.html","",""],["Room","","Room.html","",""],["String","","String.html","",""],["Student","","Student.html","",""],["action","Object","Object.html#method-i-action","(someProc)","<p>Passing a Proc in a method\n"],["action2","Object","Object.html#method-i-action2","(someProc, name)","<p>Passing a Proc that has a parameter in a method\n"],["add_room","Dungeon","Dungeon.html#method-i-add_room","(reference, name, description, connections)",""],["bubble_sort","Object","Object.html#method-i-bubble_sort","(array_to_sort)","<p>NORMAL SORTING METHOD\n"],["bubble_sort_by","Object","Object.html#method-i-bubble_sort_by","(array_to_sort)","<p>USING YIELD AND A BLOCK TO SORT\n"],["caeser_cipher","Object","Object.html#method-i-caeser_cipher","(text, shift)",""],["cheat","Die","Die.html#method-i-cheat","()",""],["favorite_number","Student","Student.html#method-i-favorite_number","()",""],["feed","Dragon","Dragon.html#method-i-feed","()",""],["find_room_in_direction","Dungeon","Dungeon.html#method-i-find_room_in_direction","(direction)",""],["find_room_in_dungeon","Dungeon","Dungeon.html#method-i-find_room_in_dungeon","(reference)",""],["full_description","Room","Room.html#method-i-full_description","()",""],["go","Dungeon","Dungeon.html#method-i-go","(direction)",""],["greeting","Person","Person.html#method-i-greeting","()","<p>begin\n\n<pre>This is an instance method, that only applies to whatever instance we\ncall it on and not to the ...</pre>\n"],["height","OrangeTree","OrangeTree.html#method-i-height","()",""],["introduction","Student","Student.html#method-i-introduction","(target)",""],["multiply_els","Enumerable","Enumerable.html#method-i-multiply_els","(array)",""],["my_all?","Enumerable","Enumerable.html#method-i-my_all-3F","()","<p>iterate over array and return true if all elements pass condition\n"],["my_any?","Enumerable","Enumerable.html#method-i-my_any-3F","()","<p>iterate over array and return true if an element passes condition\n"],["my_count","Enumerable","Enumerable.html#method-i-my_count","()","<p>iterate over array, return num of elements of all elements passing\ncondition\n"],["my_each","Enumerable","Enumerable.html#method-i-my_each","()","<p>iterate over array and run block on each element\n"],["my_each_with_index","Enumerable","Enumerable.html#method-i-my_each_with_index","()","<p>iterate over array and run block on each element with element index\n"],["my_inject","Enumerable","Enumerable.html#method-i-my_inject","(default = nil)","<p>iterate over array, passing a total to the next iteration\n"],["my_map","Enumerable","Enumerable.html#method-i-my_map","()","<p>iterate over array and return new array with elements edited by block\n"],["my_none?","Enumerable","Enumerable.html#method-i-my_none-3F","()","<p>iterate over array and return true if all elements fail to pass condition\n"],["my_select","Enumerable","Enumerable.html#method-i-my_select","()","<p>iterate over array and return new array with elements passing condition\n"],["new","Die","Die.html#method-c-new","()",""],["new","Dragon","Dragon.html#method-c-new","(name)",""],["new","Dungeon","Dungeon.html#method-c-new","(player)",""],["new","OrangeTree","OrangeTree.html#method-c-new","()",""],["new","Person","Person.html#method-c-new","(name, age, profession)","<p>create an empty array\n"],["new","Player","Player.html#method-c-new","(name)",""],["new","Room","Room.html#method-c-new","(reference, name, description, connections)",""],["number_of_instances","Person","Person.html#method-c-number_of_instances","()",""],["oneYearPasses","OrangeTree","OrangeTree.html#method-i-oneYearPasses","()",""],["people_names","Person","Person.html#method-c-people_names","()","<p>This is a class method. Syntax: ClassName.method_name SHould rather use\nself instead of ClassName but â€¦\n"],["pick","OrangeTree","OrangeTree.html#method-i-pick","()",""],["putToBed","Dragon","Dragon.html#method-i-putToBed","()",""],["range","Object","Object.html#method-i-range","(min, max, item)",""],["rock","Dragon","Dragon.html#method-i-rock","()",""],["roll","Die","Die.html#method-i-roll","()",""],["show_current_description","Dungeon","Dungeon.html#method-i-show_current_description","()",""],["showing","Die","Die.html#method-i-showing","()",""],["start","Dungeon","Dungeon.html#method-i-start","(location)",""],["stock_picker","Object","Object.html#method-i-stock_picker","(stock_prices)",""],["substrings","Object","Object.html#method-i-substrings","(sentence, dictionary)",""],["time_from_seconds","Object","Object.html#method-i-time_from_seconds","(input)","<p>Rudi Boshoff\n"],["toss","Dragon","Dragon.html#method-i-toss","()",""],["validityTest","Object","Object.html#method-i-validityTest","(birth_date, time)",""],["vowels","String","String.html#method-i-vowels","()",""],["walk","Dragon","Dragon.html#method-i-walk","()",""]]}}